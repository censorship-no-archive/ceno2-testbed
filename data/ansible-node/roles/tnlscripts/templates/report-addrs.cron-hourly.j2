#!/bin/sh
# Registers node ID and addresses by visiting a well known URL.
# If the retrieved document is a script, it saves it and runs it.
#
# **WARNING:** The URL is accessed via plain HTTP, so please make sure that
# the addresses that you placed in ``tnldo``'s configuration file are safely
# reachable with source authentication.
#
# Requires ``uuidgen`` from ``uuid-runtime`` and ``wget``.

# Avoid running two instances concurrently.
LOCK_PATH=/var/lock/report-addrs
if [ -f $LOCK_PATH ] && kill -0 "$(cat $LOCK_PATH)" 2> /dev/null; then
    echo "already running as PID $(cat $LOCK_PATH)" >&2
    exit 1
else
    echo $$ > $LOCK_PATH
fi

ID_PATH=/var/local/lib/node-id
HTTP_HOST=server.testbed

if [ ! -f "$ID_PATH" ]; then
    # Create a unique ID for subsequent runs.
    mkdir -p "$(dirname "$ID_PATH")"
    uuidgen > "$ID_PATH"
fi
# Get the node ID and put it in the login screen and shared folder
# for easy access (e.g. for troubleshooting).
ID="$(cat "$ID_PATH")"
if ! grep -q "$ID" /etc/issue; then
    sed -i "1,1iNODE $ID" /etc/issue /etc/issue.net
fi
if mountpoint -q /shared; then
    echo -n "$ID" > /shared/id.txt
fi

# These should always be present (working or not).
LOCAL_ADDRS=$(ip addr show scope global | sed -En 's/.*\binet6? ([^ ]+)\b.*/\1/p')

URL_PnQ="/addrs/?n=$ID"
for addr in $LOCAL_ADDRS; do
    URL_PnQ="$URL_PnQ&a=$addr"
done

# Get the public IPv4 address (which probably belongs to some router).
for url in {{ ip4_guessing_url | join (' ') }}; do
    addr="$(wget -4 -qO- "$url" | head -1 | grep -E '^([0-9]{1,3}.){3}[0-9]{1,3}$')"
    if [ $? -eq 0 ]; then
        URL_PnQ="$URL_PnQ&i4=$addr"
        break
    fi
done

OUTPUT=$(mktemp)

# Access the URL to reveal node ID and addresses to servers.
tnldo sh -c 'wget -qO- --header="Host: '"$HTTP_HOST"'" "http://$TNL_ADDR_BKT'"$URL_PnQ"'" > '"$OUTPUT"
result=$?

# ``tnldo`` failed before running the given command.
if [ ! -f "$OUTPUT" ]; then
    exit $result
fi

# WGet retrieved a script, make it executable and run it.
if head -1 "$OUTPUT" | grep -q '^#!'; then
    chmod +x "$OUTPUT"
    "$OUTPUT"
    result=$?
fi

rm -f "$OUTPUT"

exit $result
